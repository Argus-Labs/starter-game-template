services:
  cardinal:
    container_name: cardinal
    environment:
      - REDIS_ADDRESS=redis:6379
      - BASE_SHARD_SEQUENCER_ADDRESS=evm:9601
    build:
      target: runtime
    depends_on:
      - redis
    expose:
      - "4040"
    ports:
      - "4040:4040"
    restart: unless-stopped
    networks:
      - world-engine
  
  cardinal-debug:
    container_name: cardinal-debug
    environment:
      - REDIS_ADDRESS=redis:6379
      - BASE_SHARD_SEQUENCER_ADDRESS=evm:9601
    build:
      target: runtime-debug
    cap_add:
      - SYS_PTRACE
    security_opt:
      - "seccomp:unconfined"
    depends_on:
      - redis
    expose:
      - "4040"
      - "40000"
    ports:
      - "4040:4040"
      - "40000:40000"
    restart: unless-stopped
    networks:
      - world-engine

  evm:
    container_name: evm
    image: ghcr.io/argus-labs/world-engine-evm:1.4.1
    environment:
      ## Env vars reference: https://github.com/Argus-Labs/world-engine/blob/main/evm/README.md
      ## Get AUTH_TOKEN from celestia_devnet container: `$(docker exec $(docker ps -q) celestia bridge auth admin --node.store /home/celestia/bridge`
      - DA_BASE_URL=${DA_BASE_URL:-http://celestia-devnet}
      - DA_AUTH_TOKEN=${DA_AUTH_TOKEN:-}
      - FAUCET_ENABLED=${FAUCET_ENABLED:-false}
      - FAUCET_ADDRESS=${FAUCET_ADDRESS:-aa9288F88233Eb887d194fF2215Cf1776a6FEE41} # ETH address without leading 0x (Default: account 0 of CHAIN_KEY_MNEMONIC)
      - FAUCET_AMOUNT=${FAUCET_AMOUNT:-0x56BC75E2D63100000} # ETH in wei unit, encoded as hexadecimal. (Default: 100 ETH)
      - BASE_SHARD_ROUTER_KEY=${BASE_SHARD_ROUTER_KEY:-abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ01} # Secure auth token for game shard
    restart: unless-stopped
    expose:
      - "1317"
      - "26657"
      - "9090"
      - "9601"
    ports:
      - "1317:1317"
      - "26657:26657"
      - "9090:9090"
      - "9601:9601"
      - "8545:8545"
    networks:
      - world-engine
    depends_on:
      - celestia-devnet

  nakama:
    container_name: nakama
    platform: linux/amd64
    image: ghcr.io/argus-labs/world-engine-nakama:1.2.7
    depends_on:
      - "nakama-db"
      - "${CARDINAL_CONTAINER:-cardinal}"
    environment:
      - CARDINAL_CONTAINER=${CARDINAL_CONTAINER:-cardinal}
      - CARDINAL_ADDR=${CARDINAL_CONTAINER:-cardinal:4040}
      - CARDINAL_NAMESPACE=${CARDINAL_NAMESPACE:-defaultnamespace}
      - DB_PASSWORD=${DB_PASSWORD:-very_unsafe_password_replace_me}
      - ENABLE_ALLOWLIST=${ENABLE_ALLOWLIST:-false}
      - OUTGOING_QUEUE_SIZE=${OUTGOING_QUEUE_SIZE:-64}
    entrypoint:
      - "/bin/sh"
      - "-ec"
      - >
        /nakama/nakama migrate up --database.address root:${DB_PASSWORD:-very_unsafe_password_replace_me}@nakama-db:26257/nakama &&
        /nakama/nakama --config /nakama/data/local.yml
        --database.address root:${DB_PASSWORD:-very_unsafe_password_replace_me}@nakama-db:26257/nakama
        --socket.outgoing_queue_size=${OUTGOING_QUEUE_SIZE:-64}
        --logger.level INFO
    expose:
      - "7349"
      - "7350"
      - "7351"
    healthcheck:
      test: [ "CMD", "/nakama/nakama", "healthcheck" ]
      interval: 1s
      timeout: 1s
      retries: 20
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    networks:
      - world-engine
    restart: unless-stopped

  nakama-db:
    container_name: nakama-db
    image: cockroachdb/cockroach:latest-v23.1
    command: start-single-node --insecure --store=attrs=ssd,path=/var/lib/cockroach/,size=20%
    restart: unless-stopped
    environment:
      - COCKROACH_DATABASE=nakama
      - COCKROACH_USER=root
      - COCKROACH_PASSWORD=${DB_PASSWORD:-very_unsafe_password_replace_me}
    volumes:
      - data:/var/lib/cockroach
    expose:
      - "8080"
      - "26257"
    ports:
      - "26257:26257"
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health?ready=1" ]
      interval: 3s
      timeout: 3s
      retries: 5
    attach: false
    networks:
      - world-engine

  redis:
    container_name: redis
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    expose:
      - "6379"
    ports:
      - "6379:6379"
    attach: false
    restart: unless-stopped
    volumes:
      - data:/redis
    networks:
      - world-engine
    
  celestia-devnet:
    container_name: celestia-devnet
    image: ghcr.io/rollkit/local-celestia-devnet:latest
    networks:
      - world-engine
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:26659/head" ]
      interval: 1s
      timeout: 1s
      retries: 20
    ports:
      - "26657"
      - "26658:26658"
      - "26659:26659"
      - "9090"

volumes:
  data:
    
networks:
  world-engine:
    driver: bridge
